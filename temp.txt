import React, { useRef, useState, useEffect } from 'react';
import { Card, CardContent } from '@/components/ui/card';
import { useLanguage } from '@/contexts/LanguageContext';
import { useTheme } from '@/contexts/ThemeContext';
import { Coffee, DollarSign, Gift, RefreshCw, Play, Pause } from 'lucide-react';
import Footer from '@/components/Footer';

const CreditsPage = () => {
  const { t } = useLanguage();
  const { theme } = useTheme();
  const creditsRef = useRef<HTMLDivElement>(null);
  const [isPaused, setIsPaused] = useState(false);
  const [activeSection, setActiveSection] = useState("credits");
  
  // Animation control functions
  const restartAnimation = () => {
    if (creditsRef.current) {
      creditsRef.current.style.animation = "none";
      // Trigger reflow
      void creditsRef.current.offsetWidth;
      // Using faster animation (45s instead of 90s)
      creditsRef.current.style.animation = "scrollCredits 45s linear forwards";
      setIsPaused(false);
    }
  };
  
  const togglePause = () => {
    if (creditsRef.current) {
      if (isPaused) {
        creditsRef.current.style.animationPlayState = "running";
      } else {
        creditsRef.current.style.animationPlayState = "paused";
      }
      setIsPaused(!isPaused);
    }
  };
  
  // Space bar control
  useEffect(() => {
    const handleKeyPress = (e: KeyboardEvent) => {
      if (e.code === "Space") {
        togglePause();
        e.preventDefault();
      }
    };
    
    window.addEventListener("keydown", handleKeyPress);
    return () => window.removeEventListener("keydown", handleKeyPress);
  }, [isPaused]);
  
  // Handle section change (for header navigation)
  const handleSectionChange = (section: string) => {
    setActiveSection(section);
    // You could add navigation here if needed
  };
  
  const isDark = theme === 'dark';
  
  return (
    <div className={`min-h-screen flex flex-col ${isDark ? 'bg-slate-900' : 'bg-blue-50'}`}>
      <main className="flex-grow container mx-auto px-4 py-4">
      <Card className={`shadow-xl mb-6 ${isDark ? 'border-slate-700 bg-slate-800/80' : 'border-blue-200 bg-white/90'} backdrop-blur-md`}>
        <CardContent className="p-6">
        {/* Controls */}
        <div className="flex justify-center gap-4 mb-6">
          <button
          onClick={restartAnimation}
          className={`flex items-center gap-2 px-4 py-2 rounded-md border ${
            isDark 
            ? 'border-blue-700 bg-blue-900/20 hover:bg-blue-800/30 text-blue-200' 
            : 'border-blue-300 bg-blue-50 hover:bg-blue-100 text-blue-700'
          } transition-colors`}
          >
          <RefreshCw className="h-4 w-4" />
          {t("credits.restart")}
          </button>
          
          <button
          onClick={togglePause}
          className={`flex items-center gap-2 px-4 py-2 rounded-md border ${
            isDark 
            ? 'border-purple-700 bg-purple-900/20 hover:bg-purple-800/30 text-purple-200' 
            : 'border-purple-300 bg-purple-50 hover:bg-purple-100 text-purple-700'
          } transition-colors`}
          >
          {isPaused ? (
            <>
            <Play className="h-4 w-4" />
            {t("credits.resume")}
            </>
          ) : (
            <>
            <Pause className="h-4 w-4" />
            {t("credits.pause")}
            </>
          )}
          </button>
        </div>
        
        {/* Credits container */}
        <div className={`relative h-[60vh] overflow-auto rounded-lg ${
          isDark ? 'bg-black/40 border-indigo-900/30' : 'bg-blue-100/50 border-blue-300/50'} border`}>
